name: "CI"
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["lts/*"]
    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.4.0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: ESLint
        run: pnpm run lint

      - name: Run Vitest
        run: pnpm run test:coverage

      - name: Report Coverage
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          name: microcms-schema-gen
          vite-config-path: "./packages/gen/vitest.config.ts"
          json-summary-path: "./packages/gen/coverage/coverage-summary.json"
          json-final-path: "./packages/gen/coverage/coverage-final.json"

      - name: Create Coverage Badges
        uses: jaywcjlove/coverage-badges-cli@main
        with:
          style: flat
          source: packages/gen/coverage/coverage-summary.json
          output: packages/gen/coverage/badges.svg

      - name: Upload test coverage artifact
        uses: actions/upload-pages-artifact@v2
        with:
          name: coverage
          path: ./packages/gen/coverage

  deploy:
    needs: ci
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: coverage
